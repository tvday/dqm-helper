.show-hide-button {
    transition: none !important;
    transition-delay: 0s;
}

.accordion {
    /*--bs-accordion-bg: '' !important;*/
    /*--bs-accordion-border-color: black !important;*/
    --bs-accordion-active-bg: var(--bs-accordion-bg) !important;
    --bs-accordion-active-color: var(--bs-accordion-color) !important;
}

.accordion-item {
    /*border: var(--bs-accordion-border-width) solid var(--bs-accordion-border-color) !important;*/
}

.accordion-button:not(.collapsed) {
    /*box-shadow: inset 0 calc(-1 * var(--bs-accordion-border-width)) 0 var(--bs-accordion-border-color) !important;*/
    /*box-shadow: none !important;*/
}

.synth-node {
    --synth-node-width: 100px;
    --synth-node-height: 130px;
    --synth-node-icon-width: 30px;
    --synth-node-icon-height: 30px;
    --synth-node-title-width: 100%;
    --synth-node-title-height: calc(var(--synth-node-height) - var(--synth-node-width));
    --synth-node-border-width: var(--bs-border-width);
    --synth-node-border-radius: var(--bs-border-radius);
    --synth-node-inner-border-radius: calc(var(--synth-node-border-radius) - (var(--synth-node-border-width)));
    --synth-node-border-color: black;
    --synth-node-title-bg-color: var(--bs-primary-bg-subtle);
    --synth-node-title-color: black;

    /*position: fixed;*/
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
}

.synth-node-body {
    width: var(--synth-node-width);
    height: var(--synth-node-height);

    position: relative;
    display: flex;
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
    border: var(--synth-node-border-width) solid var(--synth-node-border-color);
    border-radius: var(--synth-node-border-radius);
}

.synth-node-btn {
    /*margin-top: 10px;*/
    border-radius: 5rem !important;
    align-self: center !important;
}

.synth-node-img {
    width: 100%;
    border-top-left-radius: var(--synth-node-inner-border-radius);
    border-top-right-radius: var(--synth-node-inner-border-radius);
}

.synth-node-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: 0;

    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
}

.synth-node-rank {
    width: var(--synth-node-icon-width);
    height: var(--synth-node-icon-height);
    /*font-size: 100%;*/
    font-weight: bold;
    background-color: black;
    color: white;
    border-top-left-radius: var(--synth-node-inner-border-radius);
    border-bottom-right-radius: var(--synth-node-inner-border-radius);

    display: flex;
    justify-content: center; /* Align horizontal */
    align-items: center; /* Align vertical */
}

.synth-node-family {
    width: var(--synth-node-icon-width);
    height: var(--synth-node-icon-height);
    border-top-right-radius: var(--synth-node-inner-border-radius);
    border-bottom-left-radius: var(--synth-node-inner-border-radius);
}

.synth-node-title {
    width: var(--synth-node-title-width);
    height: var(--synth-node-title-height);
    padding: 1px;

    border-top: var(--synth-node-border-width) solid var(--synth-node-border-color);
    border-bottom-left-radius: var(--synth-node-inner-border-radius);
    border-bottom-right-radius: var(--synth-node-inner-border-radius);

    background-color: var(--synth-node-title-bg-color);
    color: var(--synth-node-title-color);
    display: flex;
    justify-content: center; /* Align horizontal */
    align-items: center; /* Align vertical */
}

/*body {*/
/*    color: #383f4d;*/
/*    line-height: 1.5;*/
/*    font-size: 14px;*/
/*    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue",*/
/*    sans-serif;*/
/*}*/

/*
================
==    Tree    ==
================
*/

.tree {
    --tree-branch-height: 2rem;
    --tree-branch-width: .3rem;
    --tree-branch-color: black;
    --tree-node-spacing: 1rem;
    --tree-node-content-height: 100%;

    display: flex;
    width: 100%;
    /*justify-items: center;*/
    /*justify-content: center;*/
    /*align-items: center;*/
    /*align-content: center;*/
}

.tree-node {
    display: flex;
    flex-direction: column;

    height: 100%;
    width: min-content;
    margin-left: var(--tree-node-spacing);
    margin-right: var(--tree-node-spacing);
    padding-top: var(--tree-branch-height);

    align-items: center;
    /*align-content: center;*/
    /*justify-items: center;*/
    /*justify-content: center;*/
    position: relative;
}

.tree-node-content {
    /*margin-left: 2rem;*/
    /*margin-right: 2rem;*/
    width: min-content;
    height: var(--tree-node-content-height);
}

.tree-node-children {
    display: flex;
    flex-direction: row;

    width: 100%;
    height: 100%;

    padding-top: var(--tree-branch-height);

    position: relative;
    align-items: start;
    justify-content: center;
}

/* v---v Tree Branch Lines v---v */

/* all lines */
.tree-node-children::before,
.tree-node-content::before,
.tree-node-content::after {
    content: '';
    position: absolute;
    top: 0;
}

/* vertical lines */
.tree-node-children::before,
.tree-node-content::before,
.tree-node-content::after {
    height: var(--tree-branch-height);
}

/* horizontal lines */
.tree-node-content::before,
.tree-node-content::after {
    /* length of line, meets in middle of parent node */
    width: calc(50% + var(--tree-node-spacing));
}

/* from node down towards children */
.tree-node-children::before {
    border-right: calc(var(--tree-branch-width) / 2) solid var(--tree-branch-color);
    border-left: calc(var(--tree-branch-width) / 2) solid var(--tree-branch-color);
    background: var(--tree-branch-color);

    width: calc(var(--tree-branch-width));
}

/* from node, up and left towards parent or siblings */
.tree-node-content::before {
    right: 50%;

    border-top: var(--tree-branch-width) solid var(--tree-branch-color);
    border-right: calc(var(--tree-branch-width) / 2) solid var(--tree-branch-color);

    height: var(--tree-branch-height);
}
.tree-node-left > .tree-node-content::before {
    /* node on left edge only needs vertical line */
    border-top: unset;
    width: calc(var(--tree-branch-width) / 2);
}

/* from node, up and right towards parent or siblings */
.tree-node-content::after {
    left: 50%;
    border-top: var(--tree-branch-width) solid var(--tree-branch-color);
    border-left: calc(var(--tree-branch-width) / 2) solid var(--tree-branch-color);
}
.tree-node-right > .tree-node-content::after {
    /* node on right edge only needs vertical line */
    border-top: unset;
    width: calc(var(--tree-branch-width) / 2);
}

/* root node doesn't have parents */
.tree-node-only-child > .tree-node-content::after,
.tree-node-only-child > .tree-node-content::before {
    content: unset;
}

/* root node doesn't have parents */
.tree-node-root > .tree-node-content::after,
.tree-node-root > .tree-node-content::before {
    content: unset;
}

/* ^---^ Tree Branch Lines ^---^ */




